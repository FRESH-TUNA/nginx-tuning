# root 유저 사용을 지양하자
user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;


# 스레드 풀을 사용 하려면 NGINX 버전 1.7.11 이상
# Event 처리 시간이 길어져 단일 Thread를 점유하고 있으면 
# 다른 Event 처리도 늦어지는 Blocking 현상이 발생하는 큰 문제점 방지
# 또 Nginx는 Backend의 응답을 File로 Caching하기 때문에 File Read/Write 동작이 매우 자주 발생
# 이러한 File Read/Write 동작으로 인한 Blocking 문제를 해결하기 위해서 Nginx의 Thread Pool 기법이 고안
thread_pool default threads=32 max_queue=65536;

events {
        # 물리적인 cpu core 수에 따라 설정, 하지만 10~20%는 남겨두자
        # worker_rlimit_nofile = worker_processes * 2
        worker_processes 6;
        worker_rlimit_nofile 12;

        # 동시에 받을수 잇는 요청수
        worker_connections 768;

        # 동시에 요청 접수
        multi_accept on;

        # Linux 2.6+ 이상에서 사용하는 효율적인 이벤트 처리 방식
        use epoll; 
}

http {

        ##
        # Basic Settings
        ##
        
        # default 쓰레드 풀 사용
        aio threads=default; 
        
        # 커널 내에서 하나의 FD와 다른 FD간에 데이터를 복사
        sendfile on;

        # 클라이언트에 응답을 전송하기위한 시간 제한시간, default 60초
        send_timeout 2 ;
        
        # 응답 헤더를 TCP packet 한 조각으로 보냅니다.
        tcp_nopush on;

        # 전송된 데이터를 버퍼링하지 않음, 실시간으로 느린 네트워크에서 작은 패킷 문제를 해결
        tcp_nodelay on;
        
        # 이 시간이 지나면 서버가 연결을 종료
        keepalive_timeout 65;

        # 서버가 응답하지 않는 클라이언트에서 연결을 닫을 수 있도록 허용
        reset_timedout_connection on ;

        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##
        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_certificate     /etc/letsencrypt/live/freshtuna.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/freshtuna.me/privkey.pem;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        ##
        # Virtual Host Configs
        ##
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}
